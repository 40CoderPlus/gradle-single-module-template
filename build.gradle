plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'idea'

    id "com.palantir.baseline-idea" version "4.185.0"
    id "com.diffplug.spotless" version "6.12.1"
    id "org.sonarqube" version "3.5.0.2730"
    id "org.owasp.dependencycheck" version "7.4.4"
}

group = 'com.fortycoderplus.template'
version = '1.0.0'

apply plugin: 'com.palantir.baseline-format'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // lombok
    compileOnly "org.projectlombok:lombok:1.18.24"
    annotationProcessor "org.projectlombok:lombok:1.18.24"
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

java {
    withSourcesJar()
}

plugins.withType(JavaPlugin) {
    project.sourceCompatibility = JavaVersion.VERSION_11
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.fortycoderplus.template'
            artifactId = project.name
            version = project.version

            from components.java

            pom {
                name = "Gradle Single Module Template"
                description = 'Gradle Single Module Template'
                url = 'https://github.com/40coderplus/gradle-single-module-template'
                developers {
                    developer {
                        id = 'Codingendless'
                        name = 'Codingendless'
                        email = 'codingendless@40coderplus.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:40coderplus/gradle-single-module-template.git'
                    url = 'https://github.com/40coderplus/gradle-single-module-template'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
            def releasesRepoUrl = "https://maven.40coderplus.com/repository/maven-releases/"
            def snapshotsRepoUrl = "https://maven.40coderplus.com/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            allowInsecureProtocol = true
        }
    }
}

sonarqube {
    properties {
        property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
        property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
        property 'sonar.projectName', 'gradle-single-module-template'
        property 'sonar.projectKey', 'gradle-single-module-template'
    }
}

spotless {
    java {
        target 'src/main/java/**/*.java', 'src/test/java/**/*.java'

        palantirJavaFormat()
        formatAnnotations()
    }
}